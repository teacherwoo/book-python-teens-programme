=================================================
python中模块、函数与各个模块之间的调用
=================================================


------------------------
同一文件夹下的调用
------------------------

同一文件夹下的调用调用函数，针对一个模块的函数调用

第一种： import 模块名
模块名.函数名

第二种： from 模块名 import 函数名 （as 别名）
python调用另一个.py文件中的类和函数


A.py文件如下：

.. code-block:: python

   def add(x,y):
      print('和为：%d'%(x+y))

在B.py文件中调用A.py的add函数如下：

.. code-block:: python

   import A
   A.add(1,2)

或

.. code-block:: python

   from A import add
   add(1,2)

同一文件夹下的调用调用类

A.py文件如下:

.. code-block:: python

   class A:
       def __init__(self,xx,yy):
           self.x=xx
           self.y=yy
       def add(self):
           print("x和y的和为：%d"%(self.x+self.y))

在B.py文件中调用A.py的add函数如下：

.. code-block:: python

   from A import A
   a=A(2,3)
   a.add()

或 

.. code-block:: python

   import A
   a=A.A(2,3)
   a.add()

----------------------
在不同文件夹下调用
----------------------

我们详细了解一下Python的 ``sys.path`` 的使用。sys.path是python的搜索模块的路径集，是一个list，
可以在python 环境下使用：``sys.path.append(‘你的模块的名称’)`` 或者  ``sys.path.insert(0,’模块的名称’)``
添加相关的路径，但在退出python环境后自己添加的路径就会自动消失。

比如，存在一个A.py文件，它的文件存储路径为：``C:\Test`` 。
python在import模块时， 是在 ``sys.path`` 里按顺序查找的。
由于 ``sys.path`` 是一个列表，里面以字符串的形式存储了许多路径。
使用A.py文件中的函数需要先将他的文件路径放到sys.path中： ``sys.path.append(r'C:\Test')``
  
B.py中调用A.py文件：

.. code-block:: python

   import sys
   sys.path.append(r'C:\Test')
   import A
   a=A.A(2,3)
   a.add()

类似于系统的“环境变量”的列表，这个sys.path，就是python运行时的环境变量列表，加入了路径。
python运行时就会到其中进行寻找，找到了就会拿来执行，找不到就会报错。






--------------------------------------
顺便学习一下相对路径和绝对路径的表达
--------------------------------------

绝对路径就是文件的真正存在的路径，是指从硬盘的根目录(盘符)开始，进行一级级目录指向文件。是绝对详细的一个路径，在任何位置访问都可以。
相对路径就是以当前文件或者程序当前的执行路径为基准进行一级级目录指向被引用的资源文件。是相对于现在位置来说的，是以当前位置为基准进行进一步访问。
以下是常用的表示当前目录和当前目录的父级目录的标识符
  
- ``../`` 表示当前文件所在的目录的上一级目录
- ``./`` 表示当前文件所在的目录(可以省略)

根据上述规则，我们利用os模块（即operation system），查看相对路径所指向的绝对路径是什么：

.. code-block:: python

   import os
   path1=os.path.abspath('.')   # 表示当前所处的文件夹的绝对路径
   print(path1)
   path2=os.path.abspath('..')  # 表示当前所处的文件夹上一级文件夹的绝对路径
   print(path2)


-------------
访问方式总结
-------------

通过总结可以发现，当你要导入的文件在和你的当前文件在同一个目录时，你直接导入这个文件名就好了。
当你要导入的文件或者目录不和你的当前文件同目录时，你需要跳到这个你要导入文件的父级目录。
然后一级一级的用点号连接走过的目录或者文件，然后就可以了 至于要怎么跳到这个这个父级目录。
比较通用的就是，将父级目录加入系统路径sys.path，然后用点号一级一级的寻找，直到到达你要导入的模块。

















