===================
使用for循环
===================
 

假如我打印出10遍“你好”。这个时候程序员会怎么做？

答：复制粘贴10遍`print('你好')`，做法如下：

.. code-block:: python

   print('您好')
   print('您好')
   print('您好')
   print('您好')
   print('您好')
   print('您好')
   print('您好')
   print('您好')
   print('您好')
   print('您好')

那么我们要循环100次呢？也需要重复的复制粘贴100次吗？

答案是：我们要用到for循环。

for关键字，就是python立面，专门用来循环一段程序代码块的关键字，那么我们现在来看看如何使用for循环，for循环的语法格式如下：

.. code-block:: console

   for 迭代变量 in 字符串、列表、元组、字典、迭代器：
      代码块
    

   
格式中，迭代变量用于存放从序列类型变量中读取出来的元素，所以一般不会在循环中对迭代变量手动赋值。
代码块指的是具有相同缩进格式的多行代码，由于是和循环结构联用，因此代码块又称为循环体。

for 循环语句的执行流程如图所示：

.. image:: ../_static/c06/c06p01_i01_for.png

那么我们要怎么样应用for循环的知识，来改造上述效率不高的代码呢？
做法如下：

.. code-block:: python

   numberList=[0,1,2,3,4,5,6,7,8,9]
   for x in numberList:
       print('您好')

在上述代码内，我们先建立了一个“数字序号列表”——numberList，让我们每次循环的循环序号，预先放到立面。
这样，我们通过for关键字，让我们的执行循环体内的``print('您好')`` 这个工作，从0到9，一共循环执行了10次。
那么每次都要手工的新建一个numberList来循环，是否感觉很麻烦呢？

.. note::

   for循环条件部分的冒号之后，是一个程序块，应该具有同样的缩进。
   
-------------------------
更简单的生成序号列表
-------------------------

在上述代码内，我们新建了numberList，对循环体，执行了十次。
为了让每次循环都比较容易编写，我们用range函数来创造一个数字列表，它的范围是从起始数字开始到结束数字之前。

.. code-block:: python

   for x in range(0,10):
       print('您好')

让我们来看看range函数是怎么工作的。
range函数的作用是创造了一个“迭代器”，实现的效果相当于，类似于——注意是相当于——创造了一个列表。
迭代器就是python当中，专门用来和循环一起工作的对象。

为了进一步说明range的功能，我们把range和list结合起来，就得到了一个数字列表：

.. code-block:: python

   >>> print(list(range(0,10)))
   [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

那么实际上，就是从0开始循环，到10之前结束，实际上就是到9。
把其中的每次得到的数值，放到x当中。
为了明确每次的循环序号，我们使用x的值，来标识循环的次数

.. code-block:: python

   >>> for x in range(0,10):
       print('您好',x)
   
   您好 0
   您好 1
   您好 2
   您好 3
   您好 4
   您好 5
   您好 6
   您好 7
   您好 8
   您好 9

所以综上所述，循环的方式，帮我们少写了很多行代码。因此for循环语句是python中最常用的语句之一。

我们在循环其他列表的时候，可以不用range，直接对这个list进行循环也是可以的：

.. code-block:: python

   >>> y=['a','b','c','d']
   for x in y:
       print(x)
   a
   b
   c
   d

----------------------
字典的循环遍历
----------------------

**遍历字典的key**

.. code-block:: python

   dict1 = {'name': 'Tom', 'age': 20, 'gender': '男'}
   for key in dict1.keys():
      print(key+' - '+str(dict1[key]))


**遍历字典的value**

.. code-block:: python

   dict1 = {'name': 'Tom', 'age': 20, 'gender': '男'}
   for value in dict1.values():
       print(value)

 
 